{"version":3,"sources":["logo.svg","listItems.js","Title.js","services/firebaseDb.js","Schools.js","Items.js","AssignItem.js","AssignServiceEngineer.js","AddServiceEngineer.js","ViewSchoolMessages.js","ViewServiceMessages.js","Deposits.js","Orders.js","Home.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","mainListItems","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","variant","color","gutterBottom","children","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Schools","database","useState","fb","setFb","dataRows","useEffect","ref","on","snap","data","val","schoolsData","disKeys","Object","keys","i","length","console","log","forEach","item","code","schoolName","name","villageName","district","serviceName","push","classes","clsx","TableContainer","Paper","Table","className","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","itemsData","_id","iconName","itemType","formControl","margin","minWidth","selectEmpty","marginTop","AssignItem","schools","setSchools","items","setItems","schoolCode","setSchoolCode","itemName","setItemName","itemCode","setItemCode","setItemType","serial","setSerial","options","disKeysSchools","disKeysItems","filter","object","FormControl","Autocomplete","id","getOptionLabel","option","style","onChange","event","value","renderInput","params","TextField","label","e","target","Button","onClick","updates","update","document","getElementById","innerHTML","alert","service","setService","schoolData","setSchoolData","serviceData","setServiceData","servicesData","disKeysServices","object1","split","trim","object2","setServiceName","serviceNumber","setServiceNumber","messagesData","dialogMessagesData","grievancesData","datesData","ViewSchoolMessages","messageType","setMessageType","messageData","setMessageData","Dialogflow","date","setDate","dateData","setDateData","message","setMessage","disKeysDates","disKeysMessages","Date","toLocaleString","JSON","stringify","ServiceMessages","grievance","setGrievance","grievanceData","setGrievanceData","disKeysGrievances","grievanceId","messageTypeData","type","contents","ViewServiceMessages","school","setSchool","disKeysSchool","disKeysGrievance","disKeysMessage","nameWithCode","preventDefault","depositContext","flex","Deposits","Fragment","href","createData","shipTo","paymentMethod","amount","rows","seeMore","Orders","size","Home","Grid","xs","md","lg","Copyright","getFullYear","Dashboard","React","open","setOpen","CssBaseline","AppBar","Toolbar","IconButton","edge","noWrap","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","exact","path","Items","AssignServiceEngineer","AddServiceEngineer","Box","pt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.2a56defa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\n\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/items\">\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Items\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/schools\">\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Schools\" />\r\n    </ListItem>\r\n    \r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    \r\n    <ListSubheader inset>Important Ops</ListSubheader>\r\n    <ListItem button component={Link} to=\"/addserviceengineer\">\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Add Service Engineer\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/assignitem\">\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Assign Item to School\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/assignserviceengineer\">\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Assign Service Engg\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/viewschoolmessages\">\r\n    <ListItemIcon>\r\n      <AssignmentIcon />\r\n    </ListItemIcon>\r\n    <ListItemText primary=\"School User's Messages\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/viewservicemessages\">\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Service Engg's Messages\" />\r\n    </ListItem>\r\n  </div>\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import * as firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBI7uchPzUOb2C5_d2MisazwCkV25MniJo\",\r\n    authDomain: \"rnchat-1.firebaseapp.com\",\r\n    databaseURL: \"https://rnchat-1.firebaseio.com\",\r\n    projectId: \"rnchat-1\",\r\n    storageBucket: \"rnchat-1.appspot.com\",\r\n    messagingSenderId: \"20403508251\",\r\n    appId: \"1:20403508251:web:bacf5e2f4bc763259754be\",\r\n    measurementId: \"G-6P74EG9Y8C\"\r\n    };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport firebase from './services/firebaseDb';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\n\r\nexport default function Schools(){ \r\n  let database = firebase.database();\r\n\r\n  const [fb, setFb] = useState();\r\n  const [schools, setSchools] = useState([]);\r\n  const dataRows= [];\r\n\r\n  useEffect(() => {\r\n    firebase.database().ref('schools').on('value', (snap)=>{\r\n      const data = snap.val();\r\n      setFb(data);\r\n      // console.log(fb);\r\n      return;\r\n    });\r\n    }, []); \r\n  \r\n  const schoolsData = [];\r\n  function createData(code, schoolName, name, villageName, district, serviceName) {\r\n    return { code, schoolName, name, villageName, district, serviceName };\r\n  }\r\n\r\n  if(fb){\r\n    // console.log(fb);\r\n    var disKeys = Object.keys(fb);\r\n    for(var i=0;i<disKeys.length;i++){\r\n      fb[disKeys[i]][\"code\"] =  disKeys[i];\r\n      schoolsData[i] = fb[disKeys[i]];\r\n    }\r\n    console.log(\"type of schoolsData is: \"+typeof(schoolsData));\r\n    schoolsData.forEach((item, i) => {\r\n      dataRows.push(createData(item.code, item.schoolName, item.name, item.villageName, item.district, item.serviceName));\r\n    });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  \r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  console.log(\"in schools\");\r\n  console.log(fb);\r\n\r\n  return fb ? (\r\n    <TableContainer component={Paper}>\r\n    <Table className={classes.table} aria-label=\"school table\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>School Code</TableCell>\r\n          <TableCell align=\"right\">School Name</TableCell>\r\n          <TableCell align=\"right\">Name</TableCell>\r\n          <TableCell align=\"right\">Village Name</TableCell>\r\n          <TableCell align=\"right\">District</TableCell>\r\n          <TableCell align=\"right\">Service Name</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {dataRows.map((row) => (\r\n          <TableRow key={row.name}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {row.code}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{row.schoolName}</TableCell>\r\n            <TableCell align=\"right\">{row.name}</TableCell>\r\n            <TableCell align=\"right\">{row.villageName}</TableCell>\r\n            <TableCell align=\"right\">{row.district}</TableCell>\r\n            <TableCell align=\"right\">{row.serviceName}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n}\r\n","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport firebase from './services/firebaseDb';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\n\r\nexport default function Schools(){ \r\n  let database = firebase.database();\r\n\r\n  const [fb, setFb] = useState();\r\n  const [items, setItems] = useState([]);\r\n  const dataRows= [];\r\n\r\n  useEffect(() => {\r\n    firebase.database().ref('items').on('value', (snap)=>{\r\n      const data = snap.val();\r\n      setFb(data);\r\n      // console.log(fb);\r\n      return;\r\n    });\r\n    }, []); \r\n  \r\n  const itemsData = [];\r\n  function createData(_id, iconName, itemType, name) {\r\n    return { _id, iconName, itemType, name };\r\n  }\r\n\r\n  if(fb){\r\n    // console.log(fb);\r\n    var disKeys = Object.keys(fb);\r\n    for(var i=0;i<disKeys.length;i++){\r\n      itemsData[i] = fb[disKeys[i]];\r\n    }\r\n    itemsData.forEach((item, i) => {\r\n      dataRows.push(createData(item._id, item.iconName, item.itemType , item.name));\r\n    });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  \r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  console.log(\"in schools\");\r\n  console.log(fb);\r\n\r\n  return fb ? (\r\n    <TableContainer component={Paper}>\r\n    <Table className={classes.table} aria-label=\"school table\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Item Code</TableCell>\r\n          <TableCell align=\"right\">Icon Name</TableCell>\r\n          <TableCell align=\"right\">Item Type</TableCell>\r\n          <TableCell align=\"right\">Item Name</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {dataRows.map((row) => (\r\n          <TableRow key={row.name}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {row._id}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{row.iconName}</TableCell>\r\n            <TableCell align=\"right\">{row.itemType}</TableCell>\r\n            <TableCell align=\"right\">{row.name}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport firebase from './services/firebaseDb';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n\r\nexport default function AssignItem() {\r\n    \r\n  const classes = useStyles();\r\n  const [schools, setSchools] = useState();\r\n  const [items, setItems] = useState([]);\r\n  const [schoolCode, setSchoolCode] = useState();\r\n  const [itemName, setItemName] = useState();\r\n  const [itemCode, setItemCode] = useState();\r\n  const [itemType, setItemType] = useState();\r\n  const [serial, setSerial] = useState();\r\n\r\n  function handleSchoolChange (event, value) {\r\n    setSchoolCode(value[\"code\"]);\r\n    console.log(\"changed value to: \"+ value[\"code\"]);\r\n   }\r\n\r\n  function handleItemNameChange (event, value) {\r\n    setItemName(value[\"name\"]);\r\n    console.log(\"changed value to: \"+ value[\"name\"]);\r\n   }\r\n\r\n   function handleItemCodeChange (event, value) {\r\n    setItemCode(value[\"_id\"]);\r\n    console.log(\"changed value to: \"+ value[\"_id\"]);\r\n   }\r\n\r\n   function handleItemTypeChange (event, value) {\r\n    setItemType(value[\"itemType\"]);\r\n    console.log(\"changed value to: \"+ value[\"itemType\"]);\r\n   }\r\n\r\n   function handleItemSerialChange (event, value) {\r\n    setSerial(value);\r\n    console.log(\"changed value to: \"+ value);\r\n   }\r\n\r\n   function handleButtonPress (event, value) {\r\n    var updates ={};\r\n    console.log(schoolCode);\r\n    console.log(itemName);\r\n    console.log(itemCode);\r\n    console.log(itemType);\r\n    console.log(serial);\r\n    \r\n    if(schoolCode && itemName && itemCode && itemType && serial){\r\n        var object = {\r\n            \"itemType\": itemType,\r\n            \"itemname\": itemName,\r\n            \"serialNo\": serial,\r\n        }\r\n        updates[`schoolitems/${schoolCode}/items/${serial}`] = object;\r\n        firebase.database().ref().update(updates);\r\n        document.getElementById(\"uploading\").innerHTML = \"succesfully published!\";\r\n    }\r\n    else{\r\n        alert(\"Fill all relevant fields\");\r\n    }    \r\n   }\r\n\r\n\r\n  useEffect(() => {\r\n    firebase.database().ref('items').on('value', (snap)=>{\r\n      const data = snap.val();\r\n      setItems(data);\r\n      // console.log(fb);\r\n      return;\r\n    });\r\n\r\n    firebase.database().ref('schools').on('value', (snap)=>{\r\n        const data = snap.val();\r\n        setSchools(data);\r\n        return;\r\n    });\r\n    }, []); \r\n  \r\n  const itemsData = [];\r\n  const schoolsData = [];\r\n  var options = [];\r\n//   function createData(_id, iconName, itemType, name) {\r\n//     return { _id, iconName, itemType, name };\r\n//   }\r\n\r\n  if(items && schools){\r\n    // console.log(fb);\r\n    var disKeysSchools = Object.keys(schools);\r\n    for(var i=0;i<disKeysSchools.length;i++){\r\n      schoolsData[i] = {\r\n        \"code\" : disKeysSchools[i],\r\n        \"schoolName\":  disKeysSchools[i]+\" - \"+ schools[disKeysSchools[i]][\"schoolName\"],\r\n        };\r\n    }\r\n    var disKeysItems = Object.keys(items);\r\n    for(var i=0;i<disKeysItems.length;i++){\r\n        itemsData[i] = items[disKeysItems[i]];\r\n    }\r\n  }\r\n\r\n  if(itemName){\r\n    options = itemsData.filter((object) => object.name == itemName);\r\n    console.log(options);\r\n  }\r\n  \r\n\r\n  return (items && schools) ?\r\n    (\r\n    <FormControl className={classes.formControl}>\r\n        <Autocomplete\r\n        id=\"school\"\r\n        options={schoolsData}\r\n        getOptionLabel={(option) => option.schoolName}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleSchoolChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select or Enter  School\" variant=\"outlined\" />}\r\n        />\r\n\r\n        <Autocomplete\r\n        id=\"item-name\"\r\n        options={itemsData}\r\n        getOptionLabel={(option) => option.name}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleItemNameChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select or Enter Item\" variant=\"outlined\" />}\r\n        />\r\n\r\n        <Autocomplete\r\n        id=\"item-code\"\r\n        options={options}\r\n        getOptionLabel={(option) => option._id}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleItemCodeChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select Item Code\" variant=\"outlined\" />}\r\n        />\r\n\r\n        <Autocomplete\r\n        id=\"item-type\"\r\n        options={options}\r\n        getOptionLabel={(option) => option.itemType}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleItemTypeChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select Item Type\" variant=\"outlined\" />}\r\n        />\r\n\r\n        <TextField \r\n        id=\"item-serial\" \r\n        label=\"Enter Serial Number\" \r\n        variant=\"outlined\" \r\n        onChange={e => setSerial(e.target.value)}\r\n        style={{ width: 400, margin:12 }}\r\n        />\r\n\r\n        <Button \r\n        variant=\"contained\" \r\n        color=\"primary\"\r\n        style={{margin:12}}\r\n        onClick={handleButtonPress}\r\n        >\r\n        Publish Changes\r\n        </Button>\r\n\r\n        <div id=\"uploading\">\r\n\r\n        </div>\r\n\r\n    </FormControl>\r\n    ) : (\r\n        <div>Loading...</div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport firebase from './services/firebaseDb';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n\r\nexport default function AssignItem() {\r\n    \r\n  const classes = useStyles();\r\n  const [schools, setSchools] = useState();\r\n  const [service, setService] = useState();\r\n  const [schoolData, setSchoolData] = useState();\r\n  const [itemName, setItemName] = useState();\r\n  const [serviceData, setServiceData] = useState();\r\n  const [itemCode, setItemCode] = useState();\r\n  const [itemType, setItemType] = useState();\r\n  const [serial, setSerial] = useState();\r\n\r\n  function handleSchoolChange (event, value) {\r\n    setSchoolData(value);\r\n    console.log(\"changed value to: \"+ value[\"schoolCode\"]);\r\n   }\r\n\r\n  function handleServiceChange (event, value) {\r\n    setServiceData(value);\r\n    console.log(\"changed value to: \"+ value[\"name\"]);\r\n   }\r\n\r\n   function handleButtonPress (event, value) {\r\n    var updates ={};\r\n    console.log(schoolData);\r\n    console.log(serviceData);\r\n    \r\n    if(schoolData && serviceData){\r\n        var object1 = {\r\n            \"schoolId\": schoolData[\"number\"],\r\n            \"schoolName\": schoolData[\"schoolName\"].split('-')[1].trim(),\r\n            \"schoolCode\": schoolData[\"schoolCode\"],\r\n        }\r\n        updates[`users/${serviceData[\"number\"]}/schools/${schoolData[\"schoolCode\"]}`] = object1;\r\n\r\n        var object2 = {\r\n            \"serviceName\": serviceData[\"name\"],\r\n        }\r\n        updates[`schoolUser/${schoolData[\"number\"]}/services/${serviceData[\"number\"]}`] = object2;\r\n\r\n        firebase.database().ref().update(updates);\r\n        document.getElementById(\"uploading\").innerHTML = \"succesfully published!\";\r\n    }\r\n    else{\r\n        alert(\"Fill all relevant fields\");\r\n    }    \r\n   }\r\n\r\n\r\n  useEffect(() => {\r\n    firebase.database().ref('users').on('value', (snap)=>{\r\n      const data = snap.val();\r\n      setService(data);\r\n      // console.log(fb);\r\n      return;\r\n    });\r\n\r\n    firebase.database().ref('schoolUser').on('value', (snap)=>{\r\n        const data = snap.val();\r\n        setSchools(data);\r\n        return;\r\n    });\r\n    }, []); \r\n  \r\n  const servicesData = [];\r\n  const schoolsData = [];\r\n  var options = [];\r\n//   function createData(_id, iconName, itemType, name) {\r\n//     return { _id, iconName, itemType, name };\r\n//   }\r\n\r\n  if(service && schools){\r\n    // console.log(fb);\r\n    var disKeysSchools = Object.keys(schools);\r\n    for(var i=0;i<disKeysSchools.length;i++){\r\n      schoolsData[i] = {\r\n        \"number\" : disKeysSchools[i],\r\n        \"schoolCode\": schools[disKeysSchools[i]][\"schoolCode\"],\r\n        \"schoolName\":  schools[disKeysSchools[i]][\"schoolCode\"]+\" - \"+ schools[disKeysSchools[i]][\"schoolName\"],\r\n        };\r\n    }\r\n    var disKeysServices = Object.keys(service);\r\n    for(var i=0;i<disKeysServices.length;i++){\r\n        service[disKeysServices[i]][\"number\"] =  disKeysServices[i];\r\n        servicesData[i] = service[disKeysServices[i]];\r\n    }\r\n  }\r\n\r\n  return (service && schools) ?\r\n    (\r\n    <FormControl className={classes.formControl}>\r\n        <Autocomplete\r\n        id=\"school\"\r\n        options={schoolsData}\r\n        getOptionLabel={(option) => option.schoolName}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleSchoolChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select or Enter  School\" variant=\"outlined\" />}\r\n        />\r\n\r\n        <Autocomplete\r\n        id=\"service\"\r\n        options={servicesData}\r\n        getOptionLabel={(option) => option.name}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleServiceChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select or Enter Service Engineer's name\" variant=\"outlined\" />}\r\n        />\r\n\r\n        \r\n        <Button \r\n        variant=\"contained\" \r\n        color=\"primary\"\r\n        style={{margin:12}}\r\n        onClick={handleButtonPress}\r\n        >\r\n        Publish Changes\r\n        </Button>\r\n\r\n        <div id=\"uploading\">\r\n\r\n        </div>\r\n\r\n    </FormControl>\r\n    ) : (\r\n        <div>Loading...</div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport firebase from './services/firebaseDb';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n\r\nexport default function AssignItem() {\r\n    \r\n  const classes = useStyles();\r\n  const [serviceName, setServiceName] = useState();\r\n  const [serviceNumber, setServiceNumber] = useState();\r\n \r\n\r\n \r\n\r\n   function handleButtonPress (event, value) {\r\n    var updates ={};\r\n    \r\n    if(serviceName && serviceNumber){\r\n        var object1 = {\r\n            \"name\": serviceName\r\n        }\r\n        updates[`users/${serviceNumber}`] = object1;\r\n\r\n\r\n        firebase.database().ref().update(updates);\r\n        document.getElementById(\"uploading\").innerHTML = \"succesfully published!\";\r\n    }\r\n    else{\r\n        alert(\"Fill all relevant fields\");\r\n    }    \r\n   }\r\n  return(\r\n    <FormControl className={classes.formControl}>\r\n\r\n        <TextField \r\n        id=\"service-name\" \r\n        label=\"Enter Service Engineer Name\" \r\n        variant=\"outlined\" \r\n        onChange={e => setServiceName(e.target.value)}\r\n        style={{ width: 400, margin:12 }}\r\n        />\r\n\r\n        <TextField \r\n        id=\"service-number\" \r\n        label=\"Enter Service Engineer Number\" \r\n        variant=\"outlined\" \r\n        onChange={e => setServiceNumber(e.target.value)}\r\n        style={{ width: 400, margin:12 }}\r\n        />\r\n\r\n        \r\n        <Button \r\n        variant=\"contained\" \r\n        color=\"primary\"\r\n        style={{margin:12}}\r\n        onClick={handleButtonPress}\r\n        >\r\n        Publish Changes\r\n        </Button>\r\n        <div id=\"uploading\">\r\n\r\n        </div>\r\n    </FormControl>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport firebase from './services/firebaseDb';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  const schoolsData = [];\r\n  const messagesData = [];\r\n  const dialogMessagesData = [];\r\n  const dataRows=[];\r\n  const grievancesData = [];\r\n  const servicesData = [];\r\n  const datesData = [];\r\n\r\n\r\nexport default function ViewSchoolMessages() {\r\n    \r\n  const classes = useStyles();\r\n  const [schools, setSchools] = useState();\r\n  const [messageType, setMessageType] = useState();\r\n  const [service, setService] = useState();\r\n  const [schoolData, setSchoolData] = useState();\r\n  const [itemName, setItemName] = useState();\r\n  const [itemCode, setItemCode] = useState();\r\n  const [itemType, setItemType] = useState();\r\n  const [serial, setSerial] = useState();\r\n  const [messageData, setMessageData] = useState();\r\n\r\n  function Dialogflow(params){\r\n\r\n    const [date, setDate] = useState();\r\n    const [dateData, setDateData] = useState();\r\n    const [message, setMessage] = useState();\r\n\r\n    useEffect(()=>{\r\n        firebase.database().ref(`dialogMessages/${schoolData[\"number\"]}/1234567890/`).on('value', (snap)=>{\r\n            const data = snap.val();\r\n            setDate(data);\r\n            console.log(\"reached inside dialog service\");\r\n            return;\r\n        });\r\n    },[]);\r\n\r\n    if(date){\r\n        var disKeysDates = Object.keys(date);\r\n        // console.log(\"just dates are: \"+disKeysDates);\r\n        for(var i=0;i<disKeysDates.length;i++){\r\n            date[disKeysDates[i]][\"date\"] =  disKeysDates[i];\r\n            datesData[i] = {\r\n                \"date\" : date[disKeysDates[i]][\"date\"]\r\n            };\r\n        }\r\n    }\r\n\r\n    function handleDatesChange(event, value){\r\n        setDateData(value);\r\n        console.log(\"changed value to: \"+ value[\"date\"]);\r\n    }\r\n\r\n\r\n    if(dateData && !message){\r\n        firebase.database().ref(`dialogMessages/${schoolData[\"number\"]}/1234567890/${dateData[\"date\"]}`).on('value', (snap)=>{\r\n            const data = snap.val();\r\n            setMessage(data);\r\n            // console.log(message);\r\n            // console.log(\"messages data is \"+ messagesData);\r\n            return;\r\n        });\r\n    }\r\n\r\n    function createData(content) {\r\n        return { content };\r\n    }\r\n\r\n    if(message){\r\n        // console.log(\"in the rednern loop\");\r\n      var disKeysMessages = Object.keys(message);\r\n      for(var i=0;i<disKeysMessages.length;i++){\r\n          message[disKeysMessages[i]][\"id\"] =  disKeysMessages[i];\r\n          // messagesData[i] = message[disKeysMessages[i]];\r\n          dialogMessagesData[i] = { \"content\": message[disKeysMessages[i]][\"from\"]+ \": \" + message[disKeysMessages[i]][\"message\"]+ \"  \"+ new Date((message[disKeysMessages[i]][\"time\"])).toLocaleString() }\r\n      }\r\n      \r\n      console.log(\"formatted messages are: \"+ (dialogMessagesData));\r\n      console.log(\"data Rows value: \"+ dataRows);\r\n      if(dataRows.length<1){\r\n          dialogMessagesData.forEach((item, i) => {\r\n              dataRows.push(createData(item.content));\r\n          });\r\n        //   console.log(\"maintaining message: \"+message);\r\n          params.setMessageData(dialogMessagesData);\r\n          console.log(\"data rows are of length \"+ JSON.stringify(dataRows.length));\r\n      }\r\n    }\r\n    if(messageType){\r\n        return(\r\n            <div>\r\n                <Autocomplete\r\n                id=\"date\"\r\n                options={datesData}\r\n                getOptionLabel={(option) => option.date}\r\n                style={{ width: 400, margin:12 }}\r\n                onChange={handleDatesChange}\r\n                renderInput={(params) => <TextField {...params} label=\"Select or Enter Date\" variant=\"outlined\" />}\r\n                />\r\n            </div>\r\n          );\r\n    }\r\n    return;\r\n  }\r\n\r\n  function ServiceMessages(params){\r\n    const [service, setService] = useState();\r\n    const [serviceData, setServiceData] = useState();\r\n    const [grievance, setGrievance] = useState();\r\n    const [grievanceData, setGrievanceData] = useState();\r\n    const [message, setMessage] = useState();\r\n\r\n\r\n    function handleServicesChange(event, value){\r\n        setServiceData(value);\r\n        // console.log(\"changed value to: \"+ value[\"serviceName\"]);\r\n        \r\n        firebase.database().ref(`grievances/${schoolData[\"number\"]}`).on('value', (snap)=>{\r\n            const data = snap.val();\r\n            setGrievance(data);\r\n            return;\r\n        });\r\n     }\r\n\r\n     if(grievance){\r\n        var disKeysGrievances = Object.keys(grievance);\r\n        // console.log(disKeysGrievances);\r\n        for(var i=0;i<disKeysGrievances.length;i++){\r\n            grievancesData[i] = grievance[disKeysGrievances[i]];\r\n        }\r\n            // console.log(\"arrived grievance: \"+ grievance);\r\n     }\r\n\r\n     function handleGrievancesChange(event, value){\r\n        setGrievanceData(value);\r\n        console.log(\"changed value to: \"+ value[\"grievanceId\"]);\r\n    }\r\n\r\n    if(grievanceData && !message){\r\n        firebase.database().ref(`messages/${schoolData[\"number\"]}/${grievanceData[\"grievanceId\"]}/${serviceData[\"number\"]}`).on('value', (snap)=>{\r\n            const data = snap.val();\r\n            setMessage(data);\r\n            console.log(message);\r\n            console.log(\"messages data is \"+ messagesData);\r\n            return;\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n    firebase.database().ref(`schoolUser/${schoolData[\"number\"]}/services`).on('value', (snap)=>{\r\n        const data = snap.val();\r\n        setService(data);\r\n        console.log(\"reached inside set service\");\r\n        return;\r\n    });\r\n    },[]);\r\n\r\n    //   const servicesData = [];\r\n    //   const grievancesData = [];\r\n    //   const messagesData = [];\r\n    //   const dataRows=[];\r\n\r\n      if(service){\r\n        var disKeysServices = Object.keys(service);\r\n        for(var i=0;i<disKeysServices.length;i++){\r\n            service[disKeysServices[i]][\"number\"] =  disKeysServices[i];\r\n            servicesData[i] = service[disKeysServices[i]];\r\n        }\r\n      }\r\n\r\n      function createData(content) {\r\n        return { content };\r\n      }\r\n\r\n    //   console.log(\"message value is: \"+message);\r\n    //   console.log(\"required value for loop entry: \"+ (message));\r\n      if(message){\r\n          console.log(\"in the rednern loop\");\r\n        var disKeysMessages = Object.keys(message);\r\n        for(var i=0;i<disKeysMessages.length;i++){\r\n            message[disKeysMessages[i]][\"id\"] =  disKeysMessages[i];\r\n            if(message[disKeysMessages[i]][\"type\"] == \"image\"){\r\n                messagesData[i] = { \"content\": message[disKeysMessages[i]][\"from\"]+ \": \" + message[disKeysMessages[i]][\"imageUrl\"]+ \"  \"+ new Date((message[disKeysMessages[i]][\"time\"])).toLocaleString() }\r\n            }\r\n            else{\r\n                messagesData[i] = { \"content\": message[disKeysMessages[i]][\"from\"]+ \": \" + message[disKeysMessages[i]][\"message\"]+ \"  \"+ new Date((message[disKeysMessages[i]][\"time\"])).toLocaleString() }\r\n            }\r\n        }\r\n        \r\n        console.log(\"formatted messages are: \"+ (messagesData));\r\n        console.log(\"data Rows value: \"+ dataRows);\r\n        if(dataRows.length<1){\r\n            messagesData.forEach((item, i) => {\r\n                dataRows.push(createData(item.content));\r\n            });\r\n            console.log(\"maintaining message: \"+message);\r\n            params.setMessageData(messagesData);\r\n            console.log(\"data rows are of length \"+ JSON.stringify(dataRows.length));\r\n        }\r\n      }\r\n\r\n       if(messageType){\r\n        return(\r\n            <div>\r\n                <Autocomplete\r\n                id=\"service\"\r\n                options={servicesData}\r\n                getOptionLabel={(option) => option.serviceName}\r\n                style={{ width: 400, margin:12 }}\r\n                onChange={handleServicesChange}\r\n                renderInput={(params) => <TextField {...params} label=\"Select or Enter Serviceman\" variant=\"outlined\" />}\r\n                />\r\n    \r\n                <Autocomplete\r\n                id=\"grievances\"\r\n                options={grievancesData}\r\n                getOptionLabel={(option) => option.grievanceId}\r\n                style={{ width: 400, margin:12 }}\r\n                onChange={handleGrievancesChange}\r\n                renderInput={(params) => <TextField {...params} label=\"Select or Enter the grievance\" variant=\"outlined\" />}\r\n                />\r\n            </div>\r\n          );\r\n       }\r\n       \r\n       return;\r\n    }    \r\n\r\n  function handleSchoolChange (event, value) {\r\n    setSchoolData(value);\r\n    console.log(\"changed value to: \"+ value[\"schoolCode\"]);\r\n   }\r\n\r\n  function handleMessageTypeChange (event, value) {\r\n    setMessageType(value);\r\n    console.log(\"changed value to: \"+ value[\"type\"]);\r\n   }\r\n\r\n\r\n  useEffect(() => {\r\n    // firebase.database().ref('users').on('value', (snap)=>{\r\n    //   const data = snap.val();\r\n    //   setService(data);\r\n    //   // console.log(fb);\r\n    //   return;\r\n    // });\r\n\r\n    firebase.database().ref('schoolUser').on('value', (snap)=>{\r\n        const data = snap.val();\r\n        setSchools(data);\r\n        return;\r\n    });\r\n    }, []); \r\n  \r\n//   const schoolsData = [];\r\n  var messageTypeData = [];\r\n  var options = [];\r\n//   function createData(_id, iconName, itemType, name) {\r\n//     return { _id, iconName, itemType, name };\r\n//   }\r\n\r\n  if(schools){\r\n    // console.log(fb);\r\n    var disKeysSchools = Object.keys(schools);\r\n    for(var i=0;i<disKeysSchools.length;i++){\r\n      schoolsData[i] = {\r\n        \"number\" : disKeysSchools[i],\r\n        \"schoolCode\": schools[disKeysSchools[i]][\"schoolCode\"],\r\n        \"schoolName\":  schools[disKeysSchools[i]][\"schoolCode\"]+\" - \"+ schools[disKeysSchools[i]][\"schoolName\"],\r\n        };\r\n    }\r\n\r\n    messageTypeData = [{\"type\":\"Dialogflow Messages\"}, {\"type\":\"Service Engineer Messages\"}];\r\n\r\n    // var disKeysServices = Object.keys(service);\r\n    // for(var i=0;i<disKeysServices.length;i++){\r\n    //     service[disKeysServices[i]][\"number\"] =  disKeysServices[i];\r\n    //     servicesData[i] = service[disKeysServices[i]];\r\n    // }\r\n  }\r\n//   console.log(\"length of messages data\"+ messagesData.length);\r\n  return (schools) ?\r\n    (\r\n    <FormControl className={classes.formControl}>\r\n        <Autocomplete\r\n        id=\"school\"\r\n        options={schoolsData}\r\n        getOptionLabel={(option) => option.schoolName}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleSchoolChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select or Enter School\" variant=\"outlined\" />}\r\n        />\r\n\r\n        <Autocomplete\r\n        id=\"message-type\"\r\n        options={messageTypeData}\r\n        getOptionLabel={(option) => option.type}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleMessageTypeChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select or Enter Type of Messages\" variant=\"outlined\" />}\r\n        />\r\n\r\n        \r\n        {messageType !=null ? (messageType[\"type\"] == \"Dialogflow Messages\" ? <Dialogflow setMessageData={setMessageData}/> : <ServiceMessages setMessageData={setMessageData}/>) : <div></div>}\r\n        {console.log(\"Message Dataa: \"+messageData)}\r\n        {(messageData != null) ? ( messageData[(messageData.length-1)][\"from\"] != 1234567890 ? (<TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"messages table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    <TableCell>Messages</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {dataRows.map((row) => (\r\n                    <TableRow key={row.contents}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                        {row.content}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>) : (<TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"DialogMessages table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    <TableCell>Messages</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {dataRows.map((row) => (\r\n                    <TableRow key={row.contents}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                        {row.content}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>) ) : (<div>  </div>) }\r\n        <div id=\"furtherForm\">\r\n\r\n        </div>\r\n\r\n    </FormControl>\r\n    ) : (\r\n        <div>Loading...</div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport firebase from './services/firebaseDb';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  const servicesData = [];\r\n  const schoolsData =[];\r\n  const grievancesData = [];\r\n  const messagesData = [];\r\n  const dataRows=[];\r\n\r\n\r\nexport default function ViewServiceMessages() {\r\n    \r\n  const classes = useStyles();\r\n  const [service, setService] = useState();\r\n  const [serviceData, setServiceData] = useState();\r\n  const [school, setSchool] = useState();\r\n  const [message, setMessage] = useState();\r\n  const [messageData, setMessageData] = useState();\r\n  const [schoolData, setSchoolData] = useState();\r\n  const [grievance, setGrievance] = useState();\r\n  const [grievanceData, setGrievanceData] = useState();\r\n  \r\n\r\n  function handleServiceChange (event, value) {\r\n    setServiceData(value);\r\n    console.log(\"changed value to: \"+ value[\"number\"]+ \" \" + value[\"name\"]);\r\n   }\r\n\r\n  function handleSchoolChange (event, value) {\r\n    setSchoolData(value);\r\n    console.log(\"changed value to: \"+ value[\"nameWithCode\"]);\r\n   }\r\n\r\n   function handleGrievanceChange (event, value) {\r\n    setGrievanceData(value);\r\n    console.log(\"changed value to: \"+ value[\"grievance\"]);\r\n   }\r\n\r\n\r\n   useEffect(() => {\r\n    firebase.database().ref('users').on('value', (snap)=>{\r\n        const data = snap.val();\r\n        setService(data);\r\n        return;\r\n    });\r\n    }, []); \r\n  \r\n//   const schoolsData = [];\r\n  var messageTypeData = [];\r\n  var options = [];\r\n//   function createData(_id, iconName, itemType, name) {\r\n//     return { _id, iconName, itemType, name };\r\n//   }\r\n\r\n  if(service){\r\n    // console.log(fb);\r\n    var disKeysServices = Object.keys(service);\r\n    for(var i=0;i<disKeysServices.length;i++){\r\n      servicesData[i] = {\r\n        \"number\" : disKeysServices[i],\r\n        \"name\": service[disKeysServices[i]][\"name\"],\r\n        };\r\n      }\r\n    }\r\n\r\n    if(serviceData && !school){\r\n        // console.log(school);\r\n        // console.log(\"service data chosen is: \"+JSON.stringify(serviceData));\r\n      firebase.database().ref(`users/${serviceData[\"number\"]}/schools/`).on('value', (snap)=>{\r\n          const data = snap.val();\r\n          console.log(\"firebase data is\"+JSON.stringify(data));\r\n          setSchool(data);\r\n          // console.log(message);\r\n          // console.log(\"messages data is \"+ messagesData);\r\n          return;\r\n      });\r\n      console.log(\"loop test 1\");\r\n      }\r\n\r\n    // console.log(school);\r\n\r\n    if(school){\r\n      var disKeysSchool = Object.keys(school);\r\n      for(var i=0;i<disKeysSchool.length;i++){\r\n        schoolsData[i] = {\r\n            \"nameWithCode\" : school[disKeysSchool[i]][\"schoolCode\"] + \" - \" + school[disKeysSchool[i]][\"schoolName\"],\r\n            \"number\" : school[disKeysSchool[i]][\"schoolId\"],\r\n            \"name\": school[disKeysSchool[i]][\"schoolName\"],\r\n            };\r\n        }\r\n    }\r\n\r\n    if(schoolData && !grievance){\r\n        firebase.database().ref(`grievances/${schoolData[\"number\"]}/`).on('value', (snap)=>{\r\n            const data = snap.val();\r\n            console.log(\"firebase grievance data rcvd is: \"+JSON.stringify(data));\r\n            setGrievance(data);\r\n            // console.log(message);\r\n            // console.log(\"messages data is \"+ messagesData);\r\n            return;\r\n        });\r\n        console.log(\"loop test 2\");\r\n    }\r\n\r\n    if(grievance){\r\n        var disKeysGrievance = Object.keys(grievance);\r\n        for(var i=0;i<disKeysGrievance.length;i++){\r\n            // console.log(\"inside loop 4\");\r\n            if(grievance[disKeysGrievance[i]][\"service\"] == serviceData[\"number\"]){\r\n                grievancesData[i] = grievance[disKeysGrievance[i]];\r\n            }  \r\n        }\r\n    }\r\n\r\n    if(grievanceData && !message){\r\n        firebase.database().ref(`messages/${serviceData[\"number\"]}/${grievanceData[\"grievanceId\"]}/${schoolData[\"number\"]}`).on('value', (snap)=>{\r\n            const data = snap.val();\r\n            setMessage(data);\r\n            console.log(message);\r\n            return;\r\n        });\r\n        console.log(\"loop test 3\");\r\n    }\r\n\r\n    function createData(content) {\r\n        return { content };\r\n    }\r\n\r\n    if(message){\r\n        var disKeysMessage = Object.keys(message);\r\n        for(var i=0;i<disKeysMessage.length;i++){\r\n            message[disKeysMessage[i]][\"id\"] =  disKeysMessage[i];\r\n            messagesData[i] = { \"content\": message[disKeysMessage[i]][\"from\"]+ \": \" + message[disKeysMessage[i]][\"message\"]+ \"  \"+ new Date((message[disKeysMessage[i]][\"time\"])).toLocaleString() }\r\n        }\r\n\r\n        if(dataRows.length<1){\r\n            messagesData.forEach((item, i) => {\r\n                dataRows.push(createData(item.content));\r\n            });\r\n            console.log(\"data rows are of length \"+ JSON.stringify(dataRows.length));\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    // var disKeysServices = Object.keys(service);\r\n    // for(var i=0;i<disKeysServices.length;i++){\r\n    //     service[disKeysServices[i]][\"number\"] =  disKeysServices[i];\r\n    //     servicesData[i] = service[disKeysServices[i]];\r\n    // }\r\n  \r\n//   console.log(\"length of messages data\"+ messagesData.length);\r\n  return (service) ?\r\n    (\r\n    <FormControl className={classes.formControl}>\r\n        <Autocomplete\r\n        id=\"service\"\r\n        options={servicesData}\r\n        getOptionLabel={(option) => option.name}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleServiceChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select or Enter Service Engineer\" variant=\"outlined\" />}\r\n        />\r\n\r\n        <Autocomplete\r\n        id=\"school-user\"\r\n        options={schoolsData}\r\n        getOptionLabel={(option) => option.nameWithCode}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleSchoolChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select or Enter School\" variant=\"outlined\" />}\r\n        />\r\n\r\n        <Autocomplete\r\n        id=\"grievance\"\r\n        options={grievancesData}\r\n        getOptionLabel={(option) => option.grievanceId}\r\n        style={{ width: 400, margin:12 }}\r\n        onChange={handleGrievanceChange}\r\n        renderInput={(params) => <TextField {...params} label=\"Select or Enter Grievance\" variant=\"outlined\" />}\r\n        />  \r\n\r\n        {(messagesData.length > 0) ? (<TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"messages table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    <TableCell>Messages</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {dataRows.map((row) => (\r\n                    <TableRow key={row.contents}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                        {row.content}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>)  : (<div>  </div>) }\r\n\r\n    </FormControl>\r\n    ) : (\r\n        <div>Loading...</div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default function Deposits() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Deposits</Title>\r\n      <Typography component=\"p\" variant=\"h4\">\r\n        $3,024.00\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on 15 March, 2019\r\n      </Typography>\r\n      <div>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          View balance\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\n\r\n// Generate Order Data\r\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\r\n  return { id, date, name, shipTo, paymentMethod, amount };\r\n}\r\n\r\nconst rows = [\r\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\r\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\r\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\r\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\r\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Orders() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Orders</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Date</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Ship To</TableCell>\r\n            <TableCell>Payment Method</TableCell>\r\n            <TableCell align=\"right\">Sale Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.date}</TableCell>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell>{row.shipTo}</TableCell>\r\n              <TableCell>{row.paymentMethod}</TableCell>\r\n              <TableCell align=\"right\">{row.amount}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          See more orders\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Home(){\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return(\r\n    <div>\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12} md={4} lg={3}>\r\n                <Paper>\r\n                <Deposits />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Paper className={classes.paper}>\r\n                <Orders />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {Route, HashRouter as Router, Switch} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport Schools from './Schools';\r\nimport Items from './Items';\r\nimport AssignItem from './AssignItem';\r\nimport AssignServiceEngineer from './AssignServiceEngineer';\r\nimport AddServiceEngineer from './AddServiceEngineer';\r\nimport ViewSchoolMessages from './ViewSchoolMessages';\r\nimport ViewServiceMessages from './ViewServiceMessages';\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\nimport Home from './Home';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Router>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>{mainListItems}</List>\r\n          <Divider />\r\n          <List>{secondaryListItems}</List>\r\n        </Drawer>\r\n        \r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/index.html\" component={Home} />\r\n          <Route path=\"/schools\" component={Schools} />\r\n          <Route path=\"/items\" component={Items} />\r\n          <Route path=\"/assignitem\" component={AssignItem} />\r\n          <Route path=\"/assignserviceengineer\" component={AssignServiceEngineer} />\r\n          <Route path=\"/addserviceengineer\" component={AddServiceEngineer} />\r\n          <Route path=\"/viewschoolmessages\" component={ViewSchoolMessages} />\r\n          <Route path=\"/viewservicemessages\" component={ViewServiceMessages} />\r\n          \r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}